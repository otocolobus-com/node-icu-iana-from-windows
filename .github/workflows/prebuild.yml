name: Distribute package

on:
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - if: matrix.os == 'macos-latest'
        run: |
          brew update && brew install icu4c@74 -f
          echo "PKG_CONFIG_PATH=$(brew --prefix icu4c@74)/lib/pkgconfig" >> $GITHUB_ENV

      - if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update && sudo apt-get install -y libicu-dev pkg-config

      - if: matrix.os == 'windows-latest'
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: 3425f537d2f01c761d2d2cff59a7577eb4f568c0

      - if: matrix.os == 'windows-latest'
        run: |
          vcpkg integrate install
          $env:VCPKG_DEFAULT_TRIPLET = 'x64-windows'
          vcpkg install icu[core,tools] --triplet $env:VCPKG_DEFAULT_TRIPLET
          echo "VCPKG_DEFAULT_TRIPLET=${env:VCPKG_DEFAULT_TRIPLET}" >> $env:GITHUB_ENV

      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          registry-url: "https://npm.pkg.github.com"
          scope: "@otocolobus-com"

      - run: npm ci --prefer-offline --no-audit --progress=false --ignore-scripts

      # remove prebuilds to avoid conflicts
      - run: rm -rf prebuilds/
        if: matrix.os != 'windows-latest'

      - run: |
          if (Test-Path prebuilds) {
            Remove-Item -Recurse -Force prebuilds
          }
        if: matrix.os == 'windows-latest'

      - run: npm run prebuild

      - run: npm run test

      - uses: actions/upload-artifact@v4
        with:
          name: prebuilt-binaries-${{ runner.os }}
          path: prebuilds/
          retention-days: 7

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: all-prebuilt-binaries

      - run: |
          mkdir -p prebuilds
          mv all-prebuilt-binaries/prebuilt-binaries-*/* prebuilds/

      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          registry-url: "https://npm.pkg.github.com"
          scope: "@otocolobus-com"

      - run: |
          npm version patch --no-git-tag-version
          npm ci --prefer-offline --no-audit --progress=false --ignore-scripts

      - run: |
          git config --local user.name "GitHub Actions"
          git add prebuilds/
          git add package.json package-lock.json
          git commit -m "Update prebuilt binaries for version $(node -p "require('./package.json').version") [skip ci]" || echo "No changes to commit"

      - run: |
          npm publish --access restricted
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          git tag v$(node -p "require('./package.json').version")
          git push
          git push --tags
